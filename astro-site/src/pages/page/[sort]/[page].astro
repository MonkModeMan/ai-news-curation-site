---
// [sort]/[page].astro

import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const PAGE_SIZE = 30;
  const allPosts = await getCollection("posts");

  const sorts = ["date", "source"];
  const paths = [];

  for (const sort of sorts) {
    const sorted = sort === "source"
      ? [...allPosts].sort((a, b) => a.data.source.localeCompare(b.data.source))
      : [...allPosts].sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

    const totalPages = Math.ceil(sorted.length / PAGE_SIZE);
    for (let i = 1; i <= totalPages; i++) {
      paths.push({ params: { sort, page: String(i) } });
    }
  }

  return paths;
}

const { sort, page } = Astro.params;
const currentPage = parseInt(page);
const PAGE_SIZE = 30;
const allPosts = await getCollection("posts");

const sortedPosts = sort === "source"
  ? [...allPosts].sort((a, b) => a.data.source.localeCompare(b.data.source))
  : [...allPosts].sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

const totalPages = Math.ceil(sortedPosts.length / PAGE_SIZE);
const start = (currentPage - 1) * PAGE_SIZE;
const end = start + PAGE_SIZE;
const paginatedPosts = sortedPosts.slice(start, end);
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <title>AIニュース - {sort}順 {page}ページ目</title>
    <link rel="stylesheet" href="/styles/global.css" />
  </head>
  <body class="bg-gray-100 text-gray-900">
    <header class="sticky top-0 z-50 bg-gray-100 border-b border-gray-300 px-4 py-2 flex flex-wrap items-center justify-between">
      <div class="flex items-center gap-2">
        <img src="/assets/logo.png" alt="ロゴ" class="w-10 h-10 object-contain" />
        <h1 class="text-2xl font-bold text-sky-500">最新AIニュースまとめ</h1>
        <span class="text-sm text-gray-600 ml-4">(ページ {currentPage} / 全{totalPages}ページ中)</span>
      </div>
      <div class="flex flex-wrap items-center gap-4 mt-2 md:mt-0">
        <nav class="text-sm text-gray-700 flex gap-2">
          並び順：
          <a href="/page/date/1/" class="text-blue-600 hover:underline">新着順（投稿日が新しい順）</a> |
          <a href="/page/source/1/" class="text-blue-600 hover:underline">ソース別</a>
        </nav>
        <div class="flex items-center gap-1">
          <label for="search" class="text-blue-600 text-sm">記事検索</label>
          <input id="search" name="search" type="text" placeholder="Search" class="border rounded px-2 py-1 text-sm" />
        </div>
        <div class="text-sm text-blue-600">
          {currentPage > 1 && <a href={`/page/${sort}/${currentPage - 1}/`} class="mr-2">← 前のページ</a>}
          {currentPage < totalPages && <a href={`/page/${sort}/${currentPage + 1}/`}>次のページ →</a>}
        </div>
      </div>
    </header>

    <main class="p-4">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {paginatedPosts.map(post => (
          <a href={post.data.url} target="_blank" rel="noopener noreferrer" class="block bg-white rounded-lg shadow p-4 hover:bg-gray-50 transition">
            <img src={post.data.thumbnail ?? "/no-image.png"} alt="サムネイル" class="w-full h-40 object-cover rounded mb-2" />
            <div class="text-sm text-gray-500">{post.data.source}：{new Date(post.data.pubDate).toLocaleDateString("ja-JP")}</div>
            <h2 class="font-semibold">{post.data.title}</h2>
            <p class="text-sm text-gray-600 mt-1">{post.data.summary ?? ""}</p>
          </a>
        ))}
      </div>
    </main>
  </body>
</html>