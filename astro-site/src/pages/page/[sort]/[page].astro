---
// [sort]/[page].astro

import { getCollection } from "astro:content";
import ArticleCard from "../../../components/ArticleCard.astro";
import "../../../styles/global.css";

// ✅ 静的パスの生成
export async function getStaticPaths() {
  const PAGE_SIZE = 30;
  const allPosts = await getCollection("posts");

  const sorts = ["date", "source"];
  const paths = [];

  for (const sort of sorts) {
    const sorted =
      sort === "source"
        ? [...allPosts].sort((a, b) => a.data.source.localeCompare(b.data.source))
        : [...allPosts].sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));

    const totalPages = Math.ceil(sorted.length / PAGE_SIZE);
    for (let i = 1; i <= totalPages; i++) {
      paths.push({ params: { sort, page: String(i) } });
    }
  }

  return paths;
}

// ✅ 記事一覧データの準備
const PAGE_SIZE = 30;
const { sort, page } = Astro.params;
const currentPage = Number(page || 1);
const allPosts = await getCollection("posts");

const sortedPosts = sort === "source"
  ? [...allPosts].sort((a, b) => a.data.source.localeCompare(b.data.source))
  : [...allPosts].sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));

const start = (currentPage - 1) * PAGE_SIZE;
const end = currentPage * PAGE_SIZE;
const paginatedPosts = sortedPosts.slice(start, end);
const totalPages = Math.ceil(sortedPosts.length / PAGE_SIZE);
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <title>ページ {page}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body class="bg-[#f5f8ff] text-gray-800 font-sans" id="top">
    <header class="text-center py-6 border-b border-gray-200">
      <h1 class="text-2xl font-bold text-blue-700">AIニュースまとめ</h1>
      <p class="text-sm text-gray-500 mt-1">最新のAI関連ニュースをお届けします</p>
    </header>

    <main class="max-w-6xl mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 px-4 py-8">
      {paginatedPosts.map(post => (
        <ArticleCard
          title={post.data.title}
          pubDate={new Date(post.data.pubDate).toLocaleDateString("ja-JP")}
          source={post.data.media || post.data.source || "不明なメディア"}
          thumbnail={post.data.thumbnail}
          link={post.data.link}
        />
      ))}
    </main>

    <div class="flex flex-col sm:flex-row justify-center gap-4 py-6 items-center">
      {currentPage < totalPages && (
        <a
          href={`/page/${sort}/${currentPage + 1}`}
          class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          次のページ →
        </a>
      )}
      <a href="#top" class="bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400">
        ページTOPへ ↑
      </a>
    </div>

    <footer class="text-center text-sm text-gray-500 py-6 border-t border-gray-200">
      © 2025 raisex, LLC. All rights reserved.
    </footer>
  </body>
</html>