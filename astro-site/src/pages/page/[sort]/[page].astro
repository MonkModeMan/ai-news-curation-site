---
// [sort]/[page].astro

import { getCollection } from "astro:content";
import ArticleCard from "../../../components/ArticleCard.astro";

const PAGE_SIZE = 30;
const { sort, page } = Astro.params;
const currentPage = parseInt(page);
const allPosts = await getCollection("posts");

const sortedPosts = sort === "source"
  ? [...allPosts].sort((a, b) => a.data.source.localeCompare(b.data.source))
  : [...allPosts].sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));

const totalPages = Math.ceil(sortedPosts.length / PAGE_SIZE);
const paginatedPosts = sortedPosts.slice(
  (currentPage - 1) * PAGE_SIZE,
  currentPage * PAGE_SIZE
);
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <title>最新AIニュースまとめ</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body class="bg-gray-100 text-gray-800">
    <!-- ヘッダー -->
    <header class="sticky top-0 z-50 bg-gray-100 py-2 border-b border-gray-300">
      <div class="max-w-7xl mx-auto px-4 flex flex-wrap items-center justify-between">
        <div class="flex items-center space-x-3">
          <img src="/assets/logo.png" alt="ロゴ" class="w-16 h-16 object-contain" />
          <h1 class="text-3xl font-bold text-sky-500">最新AIニュースまとめ</h1>
          <span class="text-gray-600 text-sm">(ページ {currentPage} / 全{totalPages}ページ中)</span>
        </div>
        <div class="flex flex-wrap items-center space-x-4 text-sm mt-2 sm:mt-0">
          <span>並び順：</span>
          <a href="/page/date/1" class="text-blue-600 hover:underline">新着順</a>
          <span>|</span>
          <a href="/page/source/1" class="text-blue-600 hover:underline">ソース別</a>
          <span>|</span>
          <label class="text-blue-600">記事検索</label>
          <input type="text" placeholder="Search" class="border px-2 py-1 rounded" />
          <span>|</span>
          {currentPage > 1 && (
            <a href={`/page/${sort}/${currentPage - 1}`} class="text-blue-600 hover:underline">← 前のページ</a>
          )}
          {currentPage < totalPages && (
            <a href={`/page/${sort}/${currentPage + 1}`} class="text-blue-600 hover:underline">次のページ →</a>
          )}
        </div>
      </div>
    </header>

    <!-- 記事カードグリッド -->
    <main class="max-w-7xl mx-auto px-4 py-6">
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {paginatedPosts.map(post => (
          <ArticleCard {...post.data} />
        ))}
      </div>
    </main>

    <footer class="text-center text-sm text-gray-500 py-6">
      © 2025 raisex, LLC. All rights reserved.
    </footer>
  </body>
</html>