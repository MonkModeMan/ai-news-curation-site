---
// pages/page/[sort]/[page].astro
import Layout from "../../../layouts/Layout.astro";
import Card from "../../../components/ArticleCard.astro";
import { getCollection } from "astro:content";
import "../../../styles/global.css";

const { sort, page } = Astro.params;
const currentPage = parseInt(page);
const allPosts = await getCollection("posts");

const PAGE_SIZE = 30;

const sorted = sort === "source"
  ? [...allPosts].sort((a, b) => a.data.source.localeCompare(b.data.source))
  : [...allPosts].sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));

const totalPages = Math.ceil(sorted.length / PAGE_SIZE);
const paginated = sorted.slice((currentPage - 1) * PAGE_SIZE, currentPage * PAGE_SIZE);

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const sorts = ["date", "source"];
  const paths = [];

  const PAGE_SIZE = 30; // ✅ ← ここに必要！

  for (const sort of sorts) {
    const sorted = sort === "source"
      ? [...allPosts].sort((a, b) => a.data.source.localeCompare(b.data.source))
      : [...allPosts].sort((a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate));

    const totalPages = Math.ceil(sorted.length / PAGE_SIZE);
    for (let i = 1; i <= totalPages; i++) {
      paths.push({ params: { sort, page: String(i) } });
    }
  }

  return paths;
}
---

<Layout {sort} {currentPage} {totalPages}>
  <main class="max-w-screen-md mx-auto px-4 py-8">
    <h1 class="text-2xl font-bold mb-6">ニュース一覧（{sort}順）</h1>

    <div class="space-y-6">
      {paginated.map((post) => (
        <Card
          title={post.data.title}
          pubDate={post.data.pubDate}
          source={post.data.source}
          url={post.data.url}
          thumbnail={post.data.thumbnail}
          summary={post.data.summary}
        />
      ))}
    </div>

    <nav class="mt-10 flex justify-between items-center">
      {currentPage > 1 ? (
        <a href={`/ai-news-curation-site/page/${sort}/${currentPage - 1}`} class="text-blue-500 hover:underline">← 前のページ</a>
      ) : <span></span>}

      {currentPage < totalPages ? (
        <a href={`/ai-news-curation-site/page/${sort}/${currentPage + 1}`} class="text-blue-500 hover:underline">次のページ →</a>
      ) : <span></span>}
    </nav>

    <div class="mt-8 text-center">
      <a href="#top" class="text-sm text-gray-500 hover:underline">ページTOPへ</a>
    </div>
  </main>
</Layout>