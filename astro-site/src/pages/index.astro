---
// src/pages/index.astro
import Layout from "../layouts/Layout.astro";
import ArticleCard from "../components/ArticleCard.astro";
import { getCollection } from "astro:content";

const PAGE_SIZE = 30;
const currentPage = 1;
const sort = "date";

// ✅ クエリパラメータ取得
const q = Astro.url?.searchParams.get("q")?.toLowerCase() ?? "";
const media = Astro.url?.searchParams.get("media")?.toLowerCase() ?? "";

// ✅ 全記事取得
const allPosts = await getCollection("posts");

// ✅ フィルタ処理（AND条件）
const filteredPosts = allPosts.filter(post => {
  const title = post.data.title?.toLowerCase() ?? "";
  const desc = post.data.description?.toLowerCase() ?? "";
  const body = post.body?.toLowerCase() ?? "";
  const source = post.data.source?.toLowerCase() ?? "";

  const matchQ = !q || title.includes(q) || desc.includes(q) || body.includes(q);
  const matchMedia = !media || source.includes(media);

  return matchQ && matchMedia;
});

// ✅ pubDate 降順ソート
const sortedPosts = [...filteredPosts].sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

// ✅ 検索中はページネーション解除（全件表示）
const paginatedPosts = (q || media) ? sortedPosts : sortedPosts.slice(0, PAGE_SIZE);
const totalPages = (q || media) ? 1 : Math.ceil(sortedPosts.length / PAGE_SIZE);
---

<Layout currentPage={currentPage} totalPages={totalPages} sort={sort} q={q} media={media}>
  <!-- ✅ 投稿カード表示 -->
  <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
    {paginatedPosts.map((post) => (
      <ArticleCard
        title={post.data.title}
        pubDate={post.data.pubDate}
        description={post.data.description}
        media={post.data.source}
        thumbnail={post.data.thumbnail}
        url={post.data.url}
      />
    ))}
  </div>
</Layout>
