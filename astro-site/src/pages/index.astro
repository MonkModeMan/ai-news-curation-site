---
// src/pages/index.astro
import Layout from "../layouts/Layout.astro";
import ArticleCard from "../components/ArticleCard.astro";
import { getCollection } from "astro:content";

const PAGE_SIZE = 30;
const currentPage = 1;
const sort = "date";

// ✅ クエリパラメータ取得
const q = Astro.url?.searchParams.get("q")?.toLowerCase() ?? "";
const media = Astro.url?.searchParams.get("media")?.toLowerCase() ?? "";

// ✅ 全記事取得
const allPosts = await getCollection("posts");

// ✅ フィルタ処理（AND条件）
const filteredPosts = allPosts.filter(post => {
  const title = post.data.title?.toLowerCase() ?? "";
  const desc = post.data.description?.toLowerCase() ?? "";
  const body = post.body?.toLowerCase() ?? "";
  const source = post.data.source?.toLowerCase() ?? "";

  const matchQ = !q || title.includes(q) || desc.includes(q) || body.includes(q);
  const matchMedia = !media || source.includes(media);

  return matchQ && matchMedia;
});

// ✅ pubDate 降順ソート
const sortedPosts = [...filteredPosts].sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

// ✅ 全件表示（ページネーション廃止構成）
const paginatedPosts = sortedPosts;
const totalPages = 1;
const hasResults = paginatedPosts.length > 0;
---

<!-- ✅ 検索中オーバーレイ（結果あり／なしを data 属性で伝達） -->
<div
  id="search-overlay"
  class="fixed inset-0 z-50 bg-white/80 backdrop-blur-sm hidden flex items-center justify-center text-xl font-bold text-red-600"
  data-has-results="{hasResults}"
>
  🔍 検索中です… 少々お待ちください
</div>

<Layout currentPage={currentPage} totalPages={totalPages} sort={sort} q={q} media={media}>
  <!-- ✅ 投稿カード表示 -->
  <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
    {paginatedPosts.map((post) => (
      <ArticleCard
        title={post.data.title}
        pubDate={post.data.pubDate}
        description={post.data.description}
        media={post.data.source}
        thumbnail={post.data.thumbnail}
        url={post.data.url}
      />
    ))}
  </div>
</Layout>

<!-- ✅ 検索オーバーレイ制御 -->
<script>
  window.addEventListener("DOMContentLoaded", () => {
    const params = new URLSearchParams(window.location.search);
    const q = params.get("q")?.trim();
    const media = params.get("media")?.trim();
    const hasQuery = q || media;

    const overlay = document.getElementById("search-overlay");

    if (hasQuery && overlay) {
      overlay.classList.remove("hidden");

      const hasResults = overlay.dataset.hasResults === "true";

      if (hasResults) {
        // ✅ 検索結果があれば即非表示
        overlay.classList.add("hidden");
      } else {
        // ✅ 結果がない場合は10秒間表示
        setTimeout(() => {
          overlay.classList.add("hidden");
        }, 10000);
      }
    }

    // ✅ フォーム送信時に即表示
    const forms = document.querySelectorAll("form");
    forms.forEach((form) => {
      form.addEventListener("submit", () => {
        if (overlay) overlay.classList.remove("hidden");
      });
    });
  });
</script>
